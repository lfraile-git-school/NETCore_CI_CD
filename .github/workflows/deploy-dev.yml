name: Chained Deploy Dev

on:
  workflow_run:
    workflows: ["(WebApp Docker) CI (Publish artifacts)"]
    branches: main
    types:
      - completed

jobs:
  deployDev:
    environment: 
      name: chained-deploy-dev    
      url: https://github.com/${{ github.repository	}}/actions/runs/${{ github.run_id }}
    runs-on: windows-latest      
    env:
      RESOURCE_GROUP: NetCore_GIthubCI_CD_RG      
      build_config: Release      
      registry_name: lfraileacr.azurecr.io
      repository_name: eshop-web

    steps:
    - uses: hmarr/debug-action@v2
    
    - name: Get Artifacts
      uses: actions/github-script@v5.0.0
      with:
        script: |
          const fs = require('fs');
          console.log('${{ github.event.workflow_run.artifacts_url }}')     
          
          const artifactsUrl = context.payload.workflow_run.artifacts_url
          const result = await github.request(artifactsUrl)
          
          console.log(`Total count ${result.data.total_count}`);
          console.log(JSON.stringify(result));
          /* const downloadUrl = result.data.artifacts[0].archive_download_url;
          const fileContents = await github.request(downloadUrl);
          console.log(fileContents.data);
          
          await fs.writeFile('drop.zip', Buffer.from(fileContents.data), function (err, data) {
              console.log(`Error ${err}`);
          }); */
        debug: true
        

    # - name: Download arm
    #   uses: actions/download-artifact@v2
    #   with:
    #     name: arm_template
    #     path: arm_template
    
    # - name: 'Login via Azure CLI'
    #   uses: azure/login@v1
    #   with:
    #     creds: ${{ secrets.AZURE_CREDENTIALS }}

    # - name: Deploy Azure Resource Manager (ARM) Template
    #   continue-on-error: true
    #   uses: Azure/arm-deploy@v1
    #   with:        
    #     scope: resourcegroup
    #     subscriptionId: '26da47a8-c28d-4564-ae8e-8ba88e995a0a'        
    #     resourceGroupName: ${{ env.RESOURCE_GROUP }}
    #     template: arm_template/netcore_rg_arm.json     
    #     region: westeurope  
    #     deploymentMode: Incremental
    #     deploymentName: deploy-docker-${{ github.sha  }}
    #     parameters: applicationInsightsInstrumentationKey="${{ secrets.AI_INSTRUMENTATION_KEY }}" catalogConnstring="${{ secrets.CATALOG_DB_CONNSTRING }}" identityConnstring="${{ secrets.IDENTITY_DB_CONNSTRING }}" sites_netcoregithub_name=netcoreghdck serverfarms_netcoregithubplan_name=netcoregithubplan sqlserver_password=${{ secrets.DB_PASSWORD }} dockerRegistryUrl=${{ env.registry_name }} dockerRegistryUsername=${{ secrets.ACR_USER_NAME }} dockerRegistryPassword=${{ secrets.ACR_PASSWORD }} dockerImage=${{ env.registry_name }}/${{ env.repository_name }}:${{ github.sha }}

    # - name: Download scripts
    #   uses: actions/download-artifact@v2
    #   with:
    #     name: sql_scripts
    #     path: sql_scripts    
        
    # - name: Azure SQL Deploy
    #   uses: Azure/sql-action@v1
    #   with:
    #     server-name: ${{ secrets.SQL_NAME }}.database.windows.net
    #     connection-string: ${{ secrets.CATALOG_DB_CONNSTRING }}
    #     sql-file: sql_scripts/catalog.sql
        
    # - name: Azure SQL Deploy
    #   uses: Azure/sql-action@v1
    #   with:
    #     server-name: ${{ secrets.SQL_NAME }}.database.windows.net
    #     connection-string: ${{ secrets.IDENTITY_DB_CONNSTRING }}
    #     sql-file: sql_scripts/identity.sql