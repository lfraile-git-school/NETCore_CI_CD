name: (AKS) CI/CD .Net Core

on:
  workflow_dispatch:  
#  push:   
#   tags:
#      - aks-v*
#    branches: 
#      - main
#    paths:       
#      - src/**
#      - aks/**
#      - .github/workflows/aks.yml

env:
  build_config: Release      
  registry_name: lfraileacr.azurecr.io
  repository_name: eshop-web
  tag: ${{ github.sha }}
  
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v1
      with:
        version: latest

    - name: Test with dotnet
      run: dotnet test ./eShopOnWeb.sln --configuration $build_config
    
    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        registry: ${{ env.registry_name }}
        username: ${{ secrets.ACR_USER_NAME }}
        password: ${{ secrets.ACR_PASSWORD }}
   
    - name: Build and push
      uses: docker/build-push-action@v2
      with:
        context: .
        pull: true
        push: true
        file: src/Web/Dockerfile
        tags: ${{ env.registry_name }}/${{ env.repository_name }}:${{ env.tag }}  

    # - name: Build docker image (ACR)
    #   uses: azure/CLI@v1
    #   with:
    #     azcliversion: 2.16.0
    #     inlineScript: |
    #       az acr build -t ${{ env.repository_name }}:${{ env.tag }} -r ${{ env.registry_name }} -f src/Web/Dockerfile .

    - name: Upload ARM
      uses: actions/upload-artifact@v2
      with:
        name: arm_template
        path: arm

    - name: Upload AKS
      uses: actions/upload-artifact@v2
      with:
        name: aks
        path: aks

    - name: Upload Chart
      uses: actions/upload-artifact@v2
      with:
        name: chart
        path: src/Web/charts
        
  deploy_20:
    env:
      NAMESPACE: github   
    needs: build
    runs-on: ubuntu-latest  
    environment: CANARIES_20
    steps:

    - name: Download aks
      uses: actions/download-artifact@v2
      with:
        name: aks
        path: aks

    - name: Download charts
      uses: actions/download-artifact@v2
      with:
        name: chart
        path: chart
    
    - name: Find and Replace tag
      run: find *.yml -type f -exec sed -i ''s/#{TAG}#/${{ env.tag }}/g'' {} \;
      working-directory: aks

    - uses: azure/k8s-set-context@v1
      with:
        method: kubeconfig
        kubeconfig: ${{ secrets.AKS_KUBECONFIG }}
        context: lfraileaks
      id: setcontext

    # - name: Create Secret
    #   run: 'kubectl create secret generic conn-strings --from-literal="catalog-connstring=${{ secrets.CATALOG_DB_CONNSTRING }}" --from-literal="dpapi-connstring=${{ secrets.DPAPI_STORAGE }}" --from-literal="identity-connstring=${{ secrets.IDENTITY_DB_CONNSTRING }}" -n ${{ env.NAMESPACE }} --dry-run=client -o yaml | kubectl apply -f -'

    - uses: Azure/k8s-create-secret@v1
      with:        
        namespace: ${{ env.NAMESPACE }}
        container-registry-url: ${{ env.registry_name }}
        container-registry-username: ${{ secrets.ACR_USER_NAME }}
        container-registry-password: ${{ secrets.ACR_PASSWORD }}
        secret-name: secret-github-acr
    
    - uses: azure/k8s-bake@v1
      with:
        renderEngine: 'helm'
        helmChart: 'chart/web'
        overrides: |     
          replicas:2
          image.tag:${{ env.tag }}
          secrets.ConnectionStrings._CatalogConnection:${{ secrets.CATALOG_DB_CONNSTRING }}
          secrets.ConnectionStrings._IdentityConnection:${{ secrets.IDENTITY_DB_CONNSTRING }}
          secrets.DataProtection._StorageConnString:${{ secrets.DPAPI_STORAGE }}
        helm-version: 'latest' 
      id: bake

    - uses: azure/k8s-deploy@v1    
      with:
        manifests: ${{ steps.bake.outputs.manifestsBundle }}
        images: |
          ${{ env.registry_name }}/${{ env.repository_name }}:${{ env.tag }}
        imagepullsecrets: |
          secret-github-acr
        namespace: ${{ env.NAMESPACE }}
        strategy: canary
        traffic-split-method: smi
        percentage: 20
        baseline-and-canary-replicas: 1
    
    # - uses: azure/k8s-deploy@v1    
    #   with:
    #     manifests: |
    #       aks/eshop.yml
    #       aks/eshop-ingress.yml
    #     images: |
    #       ${{ env.registry_name }}/${{ env.repository_name }}:${{ env.tag }}
    #     imagepullsecrets: |
    #       secret-github-acr
    #     namespace: ${{ env.NAMESPACE }}
    #     strategy: canary
    #     traffic-split-method: smi
    #     percentage: 40
    #     baseline-and-canary-replicas: 1

  deploy_40:
    env:
      NAMESPACE: github   
    needs: deploy_20
    runs-on: ubuntu-latest  
    environment: CANARIES_40
    steps:
    - name: Download aks
      uses: actions/download-artifact@v2
      with:
        name: aks
        path: aks
    
    - name: Download charts
      uses: actions/download-artifact@v2
      with:
        name: chart
        path: chart
    
    - name: Find and Replace tag
      run: find *.yml -type f -exec sed -i ''s/#{TAG}#/${{ env.tag }}/g'' {} \;
      working-directory: aks

    - uses: azure/k8s-set-context@v1
      with:
        method: kubeconfig
        kubeconfig: ${{ secrets.AKS_KUBECONFIG }}
        context: lfraileaks
      id: setcontext

    # - name: Create Secret
    #   run: 'kubectl create secret generic conn-strings --from-literal="catalog-connstring=${{ secrets.CATALOG_DB_CONNSTRING }}" --from-literal="dpapi-connstring=${{ secrets.DPAPI_STORAGE }}" --from-literal="identity-connstring=${{ secrets.IDENTITY_DB_CONNSTRING }}" -n ${{ env.NAMESPACE }} --dry-run=client -o yaml | kubectl apply -f -'

    - uses: Azure/k8s-create-secret@v1
      with:        
        namespace: ${{ env.NAMESPACE }}
        container-registry-url: ${{ env.registry_name }}
        container-registry-username: ${{ secrets.ACR_USER_NAME }}
        container-registry-password: ${{ secrets.ACR_PASSWORD }}
        secret-name: secret-github-acr

    - uses: azure/k8s-bake@v1
      with:
        renderEngine: 'helm'
        helmChart: 'chart/web'
        overrides: |     
          replicas:2
          image.tag:${{ env.tag }}
          secrets.ConnectionStrings._CatalogConnection:${{ secrets.CATALOG_DB_CONNSTRING }}
          secrets.ConnectionStrings._IdentityConnection:${{ secrets.IDENTITY_DB_CONNSTRING }}
          secrets.DataProtection._StorageConnString:${{ secrets.DPAPI_STORAGE }}
        helm-version: 'latest' 
      id: bake

    - uses: azure/k8s-deploy@v1    
      with:
        manifests: ${{ steps.bake.outputs.manifestsBundle }}
        images: |
          ${{ env.registry_name }}/${{ env.repository_name }}:${{ env.tag }}
        imagepullsecrets: |
          secret-github-acr
        namespace: ${{ env.NAMESPACE }}
        strategy: canary
        traffic-split-method: smi
        percentage: 40
        baseline-and-canary-replicas: 1

  deploy_60:
    env:
      NAMESPACE: github   
    needs: deploy_40
    runs-on: ubuntu-latest  
    environment: CANARIES_60
    steps:
    - name: Download aks
      uses: actions/download-artifact@v2
      with:
        name: aks
        path: aks
    
    - name: Download charts
      uses: actions/download-artifact@v2
      with:
        name: chart
        path: chart
    
    - name: Find and Replace tag
      run: find *.yml -type f -exec sed -i ''s/#{TAG}#/${{ env.tag }}/g'' {} \;
      working-directory: aks

    - uses: azure/k8s-set-context@v1
      with:
        method: kubeconfig
        kubeconfig: ${{ secrets.AKS_KUBECONFIG }}
        context: lfraileaks
      id: setcontext

    # - name: Create Secret
    #   run: 'kubectl create secret generic conn-strings --from-literal="catalog-connstring=${{ secrets.CATALOG_DB_CONNSTRING }}" --from-literal="dpapi-connstring=${{ secrets.DPAPI_STORAGE }}" --from-literal="identity-connstring=${{ secrets.IDENTITY_DB_CONNSTRING }}" -n ${{ env.NAMESPACE }} --dry-run=client -o yaml | kubectl apply -f -'

    - uses: Azure/k8s-create-secret@v1
      with:        
        namespace: ${{ env.NAMESPACE }}
        container-registry-url: ${{ env.registry_name }}
        container-registry-username: ${{ secrets.ACR_USER_NAME }}
        container-registry-password: ${{ secrets.ACR_PASSWORD }}
        secret-name: secret-github-acr

    - uses: azure/k8s-bake@v1
      with:
        renderEngine: 'helm'
        helmChart: 'chart/web'
        overrides: |     
          replicas:2
          image.tag:${{ env.tag }}
          secrets.ConnectionStrings._CatalogConnection:${{ secrets.CATALOG_DB_CONNSTRING }}
          secrets.ConnectionStrings._IdentityConnection:${{ secrets.IDENTITY_DB_CONNSTRING }}
          secrets.DataProtection._StorageConnString:${{ secrets.DPAPI_STORAGE }}
        helm-version: 'latest' 
      id: bake

    - uses: azure/k8s-deploy@v1    
      with:
        manifests: ${{ steps.bake.outputs.manifestsBundle }}
        images: |
          ${{ env.registry_name }}/${{ env.repository_name }}:${{ env.tag }}
        imagepullsecrets: |
          secret-github-acr
        namespace: ${{ env.NAMESPACE }}
        strategy: canary
        traffic-split-method: smi
        percentage: 60
        baseline-and-canary-replicas: 2

  promote_ga:
    env:
      NAMESPACE: github   
    needs: deploy_60
    runs-on: ubuntu-latest  
    environment: GA
    steps:
    - name: Download aks
      uses: actions/download-artifact@v2
      with:
        name: aks
        path: aks

    - name: Download charts
      uses: actions/download-artifact@v2
      with:
        name: chart
        path: chart
    
    - name: Find and Replace tag
      run: find *.yml -type f -exec sed -i ''s/#{TAG}#/${{ env.tag }}/g'' {} \;
      working-directory: aks

    - uses: azure/k8s-set-context@v1
      with:
        method: kubeconfig
        kubeconfig: ${{ secrets.AKS_KUBECONFIG }}
        context: lfraileaks
      id: setcontext

    # - name: Create Secret
    #   run: 'kubectl create secret generic conn-strings --from-literal="catalog-connstring=${{ secrets.CATALOG_DB_CONNSTRING }}" --from-literal="dpapi-connstring=${{ secrets.DPAPI_STORAGE }}" --from-literal="identity-connstring=${{ secrets.IDENTITY_DB_CONNSTRING }}" -n ${{ env.NAMESPACE }} --dry-run=client -o yaml | kubectl apply -f -'

    - uses: Azure/k8s-create-secret@v1
      with:        
        namespace: ${{ env.NAMESPACE }}
        container-registry-url: ${{ env.registry_name }}
        container-registry-username: ${{ secrets.ACR_USER_NAME }}
        container-registry-password: ${{ secrets.ACR_PASSWORD }}
        secret-name: secret-github-acr

    - uses: azure/k8s-bake@v1
      with:
        renderEngine: 'helm'
        helmChart: 'chart/web'
        overrides: |     
          replicas:2
          image.tag:${{ env.tag }}
          secrets.ConnectionStrings._CatalogConnection:${{ secrets.CATALOG_DB_CONNSTRING }}
          secrets.ConnectionStrings._IdentityConnection:${{ secrets.IDENTITY_DB_CONNSTRING }}
          secrets.DataProtection._StorageConnString:${{ secrets.DPAPI_STORAGE }}
        helm-version: 'latest' 
      id: bake

    - uses: azure/k8s-deploy@v1    
      with:
        manifests: ${{ steps.bake.outputs.manifestsBundle }}
        images: |
          ${{ env.registry_name }}/${{ env.repository_name }}:${{ env.tag }}
        imagepullsecrets: |
          secret-github-acr
        namespace: ${{ env.NAMESPACE }}
        strategy: canary
        traffic-split-method: smi
        action: promote
